{
  "openapi": "3.0.0",
  "info": {
    "version": "3.0.0",
    "title": "My API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "servers": [
    {
      "url": "http://localhost:3000/"
    },
    {
      "url": "https://localhost:3000/"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Endpoints"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Endpoint to signup a specific user",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fullname": {
                    "example": "any"
                  },
                  "username": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  },
                  "confirmPassword": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Endpoint to signin a specific user",
        "responses": {
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "Endpoint to delete User",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{username}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Endpoint to fetch Users by username",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Endpoint to update User by username",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "lastupdated": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Endpoint to fetch all Users",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/book/bookings": {
      "get": {
        "tags": [
          "Book"
        ],
        "description": "Fetch all booking",
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "Book"
        ],
        "description": "Endpoint to Create booking",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/bookVehicle"
              }
            }
          }
        }
      }
    },
    "/book/bookings/{bookingId}": {
      "patch": {
        "tags": [
          "Book"
        ],
        "description": "Endpoint to Update booking",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/pilot/register": {
      "post": {
        "tags": [
          "Pilot"
        ],
        "description": "Endpoint to create register by pilot",
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/pilot/admin/register/{id}": {
      "put": {
        "tags": [
          "Pilot"
        ],
        "description": "Endpoint to update pilot registration by admin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "admin": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "bookVehicle": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "name"
              },
              "email": {
                "type": "string",
                "example": "email"
              },
              "mobileNumber": {
                "type": "string",
                "example": "mobileNumber"
              },
              "area": {
                "type": "string",
                "example": "area"
              },
              "vehicleType": {
                "type": "string",
                "example": "vehicleType"
              },
              "acers": {
                "type": "number",
                "example": 0
              },
              "dateBooked": {
                "type": "string",
                "example": "2024-01-01"
              },
              "startTime": {
                "type": "number",
                "example": 0
              },
              "endTime": {
                "type": "number",
                "example": 0
              },
              "estimatedAmount": {
                "type": "string",
                "example": "string"
              }
            }
          }
        }
      }
    }
  }
}